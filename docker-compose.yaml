services:
  app:
    container_name: api
    build:
      dockerfile: Dockerfile.dev
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MAVEN_OPTS: -Dspring-boot.run.profiles=dev
      OTEL_SERVICE_NAME: "meu-app"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_METRICS_EXPORTER: "otlp"
      OTEL_TRACES_EXPORTER: "otlp"
    volumes:
      - .:/app
      - /root/.m2:/root/.m2
    command: ["spring-boot:run", "-Dspring-boot.run.jvmArguments=-javaagent:/root/.m2/repository/io/opentelemetry/javaagent/opentelemetry-javaagent/1.32.0/opentelemetry-javaagent-1.32.0.jar"]
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - db
      - otel-collector
    networks:
      - otel_network

  db:
    container_name: postgres
    restart: always
    image: postgres:16.4
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - otel_network

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
    command: ["--config=/etc/otel/config.yaml"]
    ports:
      - "8088:4317"
      - "8089:4318"
    depends_on:
      - tempo
    networks:
      - otel_network

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
        - ./tempo-config.yaml:/etc/tempo.yaml
        - ./tempo-overrides.yaml:/etc/tempo-overrides.yaml
    ports:
      - "3200:3200" # Endpoint HTTP para o Tempo
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - otel_network


  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - tempo
    networks:
      - otel_network

networks:
  otel_network:
  #    driver: bridge

volumes:
  postgres_data:
  grafana_data:


